#pragma once

#include <GLFW/glfw3.h>

namespace Shard
{
	namespace Input
	{
		struct Key
		{
			unsigned char CurrentState : 1;
			unsigned char LastState : 1;

			unsigned char Pressed : 1;
			unsigned char Released : 1;
		};

		enum class Keys
		{
			A = GLFW_KEY_A,
			Add = GLFW_KEY_KP_ADD,
			B = GLFW_KEY_B,
			Back = GLFW_KEY_BACKSPACE,
			C = GLFW_KEY_C,
			CapsLock = GLFW_KEY_CAPS_LOCK,
			D = GLFW_KEY_D,
			D0 = GLFW_KEY_0,
			D1 = GLFW_KEY_1,
			D2 = GLFW_KEY_2,
			D3 = GLFW_KEY_3,
			D4 = GLFW_KEY_4,
			D5 = GLFW_KEY_5,
			D6 = GLFW_KEY_6,
			D7 = GLFW_KEY_7,
			D8 = GLFW_KEY_8,
			D9 = GLFW_KEY_9,
			Decimal = GLFW_KEY_KP_DECIMAL,
			Delete = GLFW_KEY_DELETE,
			Divide = GLFW_KEY_KP_DIVIDE,
			Down = GLFW_KEY_DOWN,
			E = GLFW_KEY_E,
			End = GLFW_KEY_END,
			Enter = GLFW_KEY_ENTER,
			Escape = GLFW_KEY_ESCAPE,
			F = GLFW_KEY_F,
			F1 = GLFW_KEY_F1,
			F10 = GLFW_KEY_F10,
			F11 = GLFW_KEY_F11,
			F12 = GLFW_KEY_F12,
			F13 = GLFW_KEY_F13,
			F14 = GLFW_KEY_F14,
			F15 = GLFW_KEY_F15,
			F16 = GLFW_KEY_F16,
			F17 = GLFW_KEY_F17,
			F18 = GLFW_KEY_F18,
			F19 = GLFW_KEY_F19,
			F2 = GLFW_KEY_F2,
			F20 = GLFW_KEY_F20,
			F21 = GLFW_KEY_F21,
			F22 = GLFW_KEY_F22,
			F23 = GLFW_KEY_F23,
			F24 = GLFW_KEY_F24,
			F25 = GLFW_KEY_F25,
			F3 = GLFW_KEY_F3,
			F4 = GLFW_KEY_F4,
			F5 = GLFW_KEY_F5,
			F6 = GLFW_KEY_F6,
			F7 = GLFW_KEY_F7,
			F8 = GLFW_KEY_F8,
			F9 = GLFW_KEY_F9,
			G = GLFW_KEY_G,
			H = GLFW_KEY_H,
			Home = GLFW_KEY_HOME,
			I = GLFW_KEY_I,
			Insert = GLFW_KEY_INSERT,
			J = GLFW_KEY_J,
			K = GLFW_KEY_K,
			L = GLFW_KEY_L,
			Left = GLFW_KEY_LEFT,
			LeftAlt = GLFW_KEY_LEFT_ALT,
			LeftControl = GLFW_KEY_LEFT_CONTROL,
			LeftShift = GLFW_KEY_LEFT_SHIFT,
			M = GLFW_KEY_M,
			Multiply = GLFW_KEY_KP_MULTIPLY,
			N = GLFW_KEY_N,
			NumLock = GLFW_KEY_NUM_LOCK,
			NumPad0 = GLFW_KEY_KP_0,
			NumPad1 = GLFW_KEY_KP_1,
			NumPad2 = GLFW_KEY_KP_2,
			NumPad3 = GLFW_KEY_KP_3,
			NumPad4 = GLFW_KEY_KP_4,
			NumPad5 = GLFW_KEY_KP_5,
			NumPad6 = GLFW_KEY_KP_6,
			NumPad7 = GLFW_KEY_KP_7,
			NumPad8 = GLFW_KEY_KP_8,
			NumPad9 = GLFW_KEY_KP_9,
			O = GLFW_KEY_O,
			P = GLFW_KEY_P,
			PageDown = GLFW_KEY_PAGE_DOWN,
			PageUp = GLFW_KEY_PAGE_UP,
			Pause = GLFW_KEY_PAUSE,
			PrintScreen = GLFW_KEY_PRINT_SCREEN,
			Q = GLFW_KEY_Q,
			R = GLFW_KEY_R,
			Right = GLFW_KEY_RIGHT,
			RightAlt = GLFW_KEY_RIGHT_ALT,
			RightControl = GLFW_KEY_RIGHT_CONTROL,
			RightShift = GLFW_KEY_RIGHT_SHIFT,
			S = GLFW_KEY_S,
			Scroll = GLFW_KEY_SCROLL_LOCK,
			Space = GLFW_KEY_SPACE,
			Subtract = GLFW_KEY_KP_SUBTRACT,
			T = GLFW_KEY_T,
			Tab = GLFW_KEY_TAB,
			U = GLFW_KEY_U,
			Up = GLFW_KEY_UP,
			V = GLFW_KEY_V,
			W = GLFW_KEY_W,
			X = GLFW_KEY_X,
			Y = GLFW_KEY_Y,
			Z = GLFW_KEY_Z,
			Apostrophe = GLFW_KEY_APOSTROPHE,
			Backslash = GLFW_KEY_BACKSLASH,
			Comma = GLFW_KEY_COMMA,
			Equal = GLFW_KEY_EQUAL,
			GraveAccent = GLFW_KEY_GRAVE_ACCENT,
			NumPadEnter = GLFW_KEY_KP_ENTER,
			NumPadEqual = GLFW_KEY_KP_EQUAL,
			LeftBracket = GLFW_KEY_LEFT_BRACKET,
			LeftSuper = GLFW_KEY_LEFT_SUPER,
			Menu = GLFW_KEY_MENU,
			Minus = GLFW_KEY_MINUS,
			Period = GLFW_KEY_PERIOD,
			RightBracket = GLFW_KEY_RIGHT_BRACKET,
			RightSuper = GLFW_KEY_RIGHT_SUPER,
			Semicolon = GLFW_KEY_SEMICOLON,
			Slash = GLFW_KEY_SLASH,
			Unknown = GLFW_KEY_UNKNOWN,
			__NumKeys = GLFW_KEY_LAST + 1
		};
	}
}